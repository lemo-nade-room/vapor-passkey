{"interfaceLanguages":{"swift":[{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/passkey\/passkeyuser\/migration\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/passkey\/passkeyuser\/migration\/prepare(on:)-2stbq","title":"func prepare(on: Database) async throws","type":"method"},{"path":"\/documentation\/passkey\/passkeyuser\/migration\/revert(on:)-6ygoi","title":"func revert(on: Database) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/passkey\/passkeyuser\/migration\/name","title":"var name: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/passkey\/passkeyuser\/migration\/prepare(on:)-k47g","title":"func prepare(on: Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/passkey\/passkeyuser\/migration\/revert(on:)-as7n","title":"func revert(on: Database) -> EventLoopFuture<Void>","type":"method"}],"path":"\/documentation\/passkey\/passkeyuser\/migration\/migration-implementations","title":"Migration Implementations","type":"symbol"}],"path":"\/documentation\/passkey\/passkeyuser\/migration","title":"PasskeyUser.Migration","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/passkey\/passkeyuser\/init()","title":"init()","type":"init"},{"path":"\/documentation\/passkey\/passkeyuser\/init(username:displayname:)","title":"init(username: String, displayName: String?)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/passkey\/passkeyuser\/createdat","title":"var createdAt: Date?","type":"property"},{"path":"\/documentation\/passkey\/passkeyuser\/displayname","title":"var displayName: String","type":"property"},{"path":"\/documentation\/passkey\/passkeyuser\/id-swift.property","title":"var id: String?","type":"property"},{"path":"\/documentation\/passkey\/passkeyuser\/webauthnuser","title":"var webAuthnUser: PublicKeyCredentialUserEntity","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/passkey\/passkeyuser\/schema","title":"static let schema: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/passkey\/passkeyuser\/joined(_:)","title":"func joined<Joined>(Joined.Type) throws -> Joined","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/passkey\/passkeyuser\/alias","title":"static var alias: String?","type":"property"}],"path":"\/documentation\/passkey\/passkeyuser\/anymodel-implementations","title":"AnyModel Implementations","type":"symbol"},{"children":[{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/passkey\/passkeyuser\/guardmiddleware(throwing:)","title":"static func guardMiddleware(throwing: Error) -> Middleware","type":"method"},{"path":"\/documentation\/passkey\/passkeyuser\/redirectmiddleware(makepath:)","title":"static func redirectMiddleware(makePath: (Request) -> String) -> Middleware","type":"method"},{"path":"\/documentation\/passkey\/passkeyuser\/redirectmiddleware(path:)","title":"static func redirectMiddleware(path: String) -> Middleware","type":"method"}],"path":"\/documentation\/passkey\/passkeyuser\/authenticatable-implementations","title":"Authenticatable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/passkey\/passkeyuser\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/passkey\/passkeyuser\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/passkey\/passkeyuser\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/passkey\/passkeyuser\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/passkey\/passkeyuser\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/passkey\/passkeyuser\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/passkey\/passkeyuser\/haschanges","title":"var hasChanges: Bool","type":"property"},{"path":"\/documentation\/passkey\/passkeyuser\/properties","title":"var properties: [AnyProperty]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/passkey\/passkeyuser\/input(to:)","title":"func input(to: DatabaseInput)","type":"method"},{"path":"\/documentation\/passkey\/passkeyuser\/output(from:)","title":"func output(from: DatabaseOutput) throws","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/passkey\/passkeyuser\/boolean","title":"PasskeyUser.Boolean","type":"typealias"},{"path":"\/documentation\/passkey\/passkeyuser\/enum","title":"PasskeyUser.Enum","type":"typealias"},{"path":"\/documentation\/passkey\/passkeyuser\/field","title":"PasskeyUser.Field","type":"typealias"},{"path":"\/documentation\/passkey\/passkeyuser\/group","title":"PasskeyUser.Group","type":"typealias"},{"path":"\/documentation\/passkey\/passkeyuser\/optionalboolean","title":"PasskeyUser.OptionalBoolean","type":"typealias"},{"path":"\/documentation\/passkey\/passkeyuser\/optionalenum","title":"PasskeyUser.OptionalEnum","type":"typealias"},{"path":"\/documentation\/passkey\/passkeyuser\/optionalfield","title":"PasskeyUser.OptionalField","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/passkey\/passkeyuser\/keys","title":"static var keys: [FieldKey]","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/passkey\/passkeyuser\/path(for:)","title":"static func path<Property>(for: KeyPath<Self, Property>) -> [FieldKey]","type":"method"}],"path":"\/documentation\/passkey\/passkeyuser\/fields-implementations","title":"Fields Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/passkey\/passkeyuser\/create(on:)","title":"func create(on: Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/passkey\/passkeyuser\/delete(force:on:)","title":"func delete(force: Bool, on: Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/passkey\/passkeyuser\/requireid()","title":"func requireID() throws -> Self.IDValue","type":"method"},{"path":"\/documentation\/passkey\/passkeyuser\/restore(on:)","title":"func restore(on: Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/passkey\/passkeyuser\/save(on:)","title":"func save(on: Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/passkey\/passkeyuser\/update(on:)","title":"func update(on: Database) -> EventLoopFuture<Void>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/passkey\/passkeyuser\/children","title":"PasskeyUser.Children","type":"typealias"},{"path":"\/documentation\/passkey\/passkeyuser\/compositechildren","title":"PasskeyUser.CompositeChildren","type":"typealias"},{"path":"\/documentation\/passkey\/passkeyuser\/compositeid","title":"PasskeyUser.CompositeID","type":"typealias"},{"path":"\/documentation\/passkey\/passkeyuser\/compositeoptionalchild","title":"PasskeyUser.CompositeOptionalChild","type":"typealias"},{"path":"\/documentation\/passkey\/passkeyuser\/compositeoptionalparent","title":"PasskeyUser.CompositeOptionalParent","type":"typealias"},{"path":"\/documentation\/passkey\/passkeyuser\/compositeparent","title":"PasskeyUser.CompositeParent","type":"typealias"},{"path":"\/documentation\/passkey\/passkeyuser\/id-swift.typealias","title":"PasskeyUser.ID","type":"typealias"},{"path":"\/documentation\/passkey\/passkeyuser\/optionalchild","title":"PasskeyUser.OptionalChild","type":"typealias"},{"path":"\/documentation\/passkey\/passkeyuser\/optionalparent","title":"PasskeyUser.OptionalParent","type":"typealias"},{"path":"\/documentation\/passkey\/passkeyuser\/parent","title":"PasskeyUser.Parent","type":"typealias"},{"path":"\/documentation\/passkey\/passkeyuser\/siblings","title":"PasskeyUser.Siblings","type":"typealias"},{"path":"\/documentation\/passkey\/passkeyuser\/timestamp","title":"PasskeyUser.Timestamp","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/passkey\/passkeyuser\/find(_:on:)-1wfib","title":"static func find(Self.IDValue?, on: Database) async throws -> Self?","type":"method"},{"path":"\/documentation\/passkey\/passkeyuser\/find(_:on:)-9lo1b","title":"static func find(Self.IDValue?, on: Database) -> EventLoopFuture<Self?>","type":"method"},{"path":"\/documentation\/passkey\/passkeyuser\/query(on:)","title":"static func query(on: Database) -> QueryBuilder<Self>","type":"method"}],"path":"\/documentation\/passkey\/passkeyuser\/model-implementations","title":"Model Implementations","type":"symbol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/passkey\/passkeyuser\/schemaoralias","title":"static var schemaOrAlias: String","type":"property"},{"path":"\/documentation\/passkey\/passkeyuser\/space","title":"static var space: String?","type":"property"}],"path":"\/documentation\/passkey\/passkeyuser\/schema-implementations","title":"Schema Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/passkey\/passkeyuser\/sessionid","title":"var sessionID: Self.IDValue","type":"property"}],"path":"\/documentation\/passkey\/passkeyuser\/sessionauthenticatable-implementations","title":"SessionAuthenticatable Implementations","type":"symbol"}],"path":"\/documentation\/passkey\/passkeyuser","title":"PasskeyUser","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/passkey\/webauthncredential\/migration\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/passkey\/webauthncredential\/migration\/prepare(on:)-5s8zn","title":"func prepare(on: Database) async throws","type":"method"},{"path":"\/documentation\/passkey\/webauthncredential\/migration\/revert(on:)-9bm5x","title":"func revert(on: Database) async throws","type":"method"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/passkey\/webauthncredential\/migration\/name","title":"var name: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/passkey\/webauthncredential\/migration\/prepare(on:)-22noy","title":"func prepare(on: Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/passkey\/webauthncredential\/migration\/revert(on:)-6bqkt","title":"func revert(on: Database) -> EventLoopFuture<Void>","type":"method"}],"path":"\/documentation\/passkey\/webauthncredential\/migration\/migration-implementations","title":"Migration Implementations","type":"symbol"}],"path":"\/documentation\/passkey\/webauthncredential\/migration","title":"WebAuthnCredential.Migration","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/passkey\/webauthncredential\/init()","title":"init()","type":"init"},{"path":"\/documentation\/passkey\/webauthncredential\/init(from:username:)","title":"convenience init(from: Credential, username: String)","type":"init"},{"path":"\/documentation\/passkey\/webauthncredential\/init(id:publickey:currentsigncount:username:)","title":"init(id: String, publicKey: String, currentSignCount: UInt32, username: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/passkey\/webauthncredential\/createdat","title":"var createdAt: Date?","type":"property"},{"path":"\/documentation\/passkey\/webauthncredential\/currentsigncount","title":"var currentSignCount: Int","type":"property"},{"path":"\/documentation\/passkey\/webauthncredential\/id-swift.property","title":"var id: String?","type":"property"},{"path":"\/documentation\/passkey\/webauthncredential\/publickey","title":"var publicKey: String","type":"property"},{"path":"\/documentation\/passkey\/webauthncredential\/user","title":"var user: PasskeyUser","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/passkey\/webauthncredential\/schema","title":"static let schema: String","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/passkey\/webauthncredential\/joined(_:)","title":"func joined<Joined>(Joined.Type) throws -> Joined","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/passkey\/webauthncredential\/alias","title":"static var alias: String?","type":"property"}],"path":"\/documentation\/passkey\/webauthncredential\/anymodel-implementations","title":"AnyModel Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/passkey\/webauthncredential\/afterdecode()","title":"func afterDecode() throws","type":"method"},{"path":"\/documentation\/passkey\/webauthncredential\/beforeencode()","title":"func beforeEncode() throws","type":"method"},{"path":"\/documentation\/passkey\/webauthncredential\/encoderesponse(for:)","title":"func encodeResponse(for: Request) -> EventLoopFuture<Response>","type":"method"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/passkey\/webauthncredential\/defaultcontenttype","title":"static var defaultContentType: HTTPMediaType","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/passkey\/webauthncredential\/decoderequest(_:)-3faer","title":"static func decodeRequest(Request) -> EventLoopFuture<Self>","type":"method"},{"path":"\/documentation\/passkey\/webauthncredential\/decoderequest(_:)-6tdw1","title":"static func decodeRequest(Request) async throws -> Self","type":"method"}],"path":"\/documentation\/passkey\/webauthncredential\/content-implementations","title":"Content Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/passkey\/webauthncredential\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/passkey\/webauthncredential\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/passkey\/webauthncredential\/init(from:)","title":"init(from: Decoder) throws","type":"init"}],"path":"\/documentation\/passkey\/webauthncredential\/decodable-implementations","title":"Decodable Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/passkey\/webauthncredential\/encode(to:)","title":"func encode(to: Encoder) throws","type":"method"}],"path":"\/documentation\/passkey\/webauthncredential\/encodable-implementations","title":"Encodable Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/passkey\/webauthncredential\/haschanges","title":"var hasChanges: Bool","type":"property"},{"path":"\/documentation\/passkey\/webauthncredential\/properties","title":"var properties: [AnyProperty]","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/passkey\/webauthncredential\/input(to:)","title":"func input(to: DatabaseInput)","type":"method"},{"path":"\/documentation\/passkey\/webauthncredential\/output(from:)","title":"func output(from: DatabaseOutput) throws","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/passkey\/webauthncredential\/boolean","title":"WebAuthnCredential.Boolean","type":"typealias"},{"path":"\/documentation\/passkey\/webauthncredential\/enum","title":"WebAuthnCredential.Enum","type":"typealias"},{"path":"\/documentation\/passkey\/webauthncredential\/field","title":"WebAuthnCredential.Field","type":"typealias"},{"path":"\/documentation\/passkey\/webauthncredential\/group","title":"WebAuthnCredential.Group","type":"typealias"},{"path":"\/documentation\/passkey\/webauthncredential\/optionalboolean","title":"WebAuthnCredential.OptionalBoolean","type":"typealias"},{"path":"\/documentation\/passkey\/webauthncredential\/optionalenum","title":"WebAuthnCredential.OptionalEnum","type":"typealias"},{"path":"\/documentation\/passkey\/webauthncredential\/optionalfield","title":"WebAuthnCredential.OptionalField","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/passkey\/webauthncredential\/keys","title":"static var keys: [FieldKey]","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/passkey\/webauthncredential\/path(for:)","title":"static func path<Property>(for: KeyPath<Self, Property>) -> [FieldKey]","type":"method"}],"path":"\/documentation\/passkey\/webauthncredential\/fields-implementations","title":"Fields Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/passkey\/webauthncredential\/create(on:)","title":"func create(on: Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/passkey\/webauthncredential\/delete(force:on:)","title":"func delete(force: Bool, on: Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/passkey\/webauthncredential\/requireid()","title":"func requireID() throws -> Self.IDValue","type":"method"},{"path":"\/documentation\/passkey\/webauthncredential\/restore(on:)","title":"func restore(on: Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/passkey\/webauthncredential\/save(on:)","title":"func save(on: Database) -> EventLoopFuture<Void>","type":"method"},{"path":"\/documentation\/passkey\/webauthncredential\/update(on:)","title":"func update(on: Database) -> EventLoopFuture<Void>","type":"method"},{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/passkey\/webauthncredential\/children","title":"WebAuthnCredential.Children","type":"typealias"},{"path":"\/documentation\/passkey\/webauthncredential\/compositechildren","title":"WebAuthnCredential.CompositeChildren","type":"typealias"},{"path":"\/documentation\/passkey\/webauthncredential\/compositeid","title":"WebAuthnCredential.CompositeID","type":"typealias"},{"path":"\/documentation\/passkey\/webauthncredential\/compositeoptionalchild","title":"WebAuthnCredential.CompositeOptionalChild","type":"typealias"},{"path":"\/documentation\/passkey\/webauthncredential\/compositeoptionalparent","title":"WebAuthnCredential.CompositeOptionalParent","type":"typealias"},{"path":"\/documentation\/passkey\/webauthncredential\/compositeparent","title":"WebAuthnCredential.CompositeParent","type":"typealias"},{"path":"\/documentation\/passkey\/webauthncredential\/id-swift.typealias","title":"WebAuthnCredential.ID","type":"typealias"},{"path":"\/documentation\/passkey\/webauthncredential\/optionalchild","title":"WebAuthnCredential.OptionalChild","type":"typealias"},{"path":"\/documentation\/passkey\/webauthncredential\/optionalparent","title":"WebAuthnCredential.OptionalParent","type":"typealias"},{"path":"\/documentation\/passkey\/webauthncredential\/parent","title":"WebAuthnCredential.Parent","type":"typealias"},{"path":"\/documentation\/passkey\/webauthncredential\/siblings","title":"WebAuthnCredential.Siblings","type":"typealias"},{"path":"\/documentation\/passkey\/webauthncredential\/timestamp","title":"WebAuthnCredential.Timestamp","type":"typealias"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/passkey\/webauthncredential\/find(_:on:)-6ohob","title":"static func find(Self.IDValue?, on: Database) async throws -> Self?","type":"method"},{"path":"\/documentation\/passkey\/webauthncredential\/find(_:on:)-iznp","title":"static func find(Self.IDValue?, on: Database) -> EventLoopFuture<Self?>","type":"method"},{"path":"\/documentation\/passkey\/webauthncredential\/query(on:)","title":"static func query(on: Database) -> QueryBuilder<Self>","type":"method"}],"path":"\/documentation\/passkey\/webauthncredential\/model-implementations","title":"Model Implementations","type":"symbol"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/passkey\/webauthncredential\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) -> EventLoopFuture<Response>","type":"method"}],"path":"\/documentation\/passkey\/webauthncredential\/responseencodable-implementations","title":"ResponseEncodable Implementations","type":"symbol"},{"children":[{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/passkey\/webauthncredential\/schemaoralias","title":"static var schemaOrAlias: String","type":"property"},{"path":"\/documentation\/passkey\/webauthncredential\/space","title":"static var space: String?","type":"property"}],"path":"\/documentation\/passkey\/webauthncredential\/schema-implementations","title":"Schema Implementations","type":"symbol"}],"path":"\/documentation\/passkey\/webauthncredential","title":"WebAuthnCredential","type":"class"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/passkey\/passkeycontroller\/init(sessionregistrationchallengekey:sessionauthchallengekey:)","title":"init(sessionRegistrationChallengeKey: String, sessionAuthChallengeKey: String)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/passkey\/passkeycontroller\/sessionauthchallengekey","title":"var sessionAuthChallengeKey: String","type":"property"},{"path":"\/documentation\/passkey\/passkeycontroller\/sessionregistrationchallengekey","title":"var sessionRegistrationChallengeKey: String","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/passkey\/passkeycontroller\/boot(routes:)","title":"func boot(routes: RoutesBuilder)","type":"method"},{"path":"\/documentation\/passkey\/passkeycontroller\/createmakecredential(req:)","title":"func createMakeCredential(req: Request) async throws -> HTTPStatus","type":"method"},{"path":"\/documentation\/passkey\/passkeycontroller\/deletemakecredential(req:)","title":"func deleteMakeCredential(req: Request) async throws -> HTTPStatus","type":"method"},{"path":"\/documentation\/passkey\/passkeycontroller\/getauthenticate(req:)","title":"func getAuthenticate(req: Request) async throws -> PublicKeyCredentialRequestOptions","type":"method"},{"path":"\/documentation\/passkey\/passkeycontroller\/getmakecredential(req:)","title":"func getMakeCredential(req: Request) async throws -> PublicKeyCredentialCreationOptions","type":"method"},{"path":"\/documentation\/passkey\/passkeycontroller\/postauthenticate(req:)","title":"func postAuthenticate(req: Request) async throws -> HTTPStatus","type":"method"}],"path":"\/documentation\/passkey\/passkeycontroller","title":"PasskeyController","type":"struct"},{"title":"Extended Modules","type":"groupMarker"},{"children":[{"title":"Extended Classes","type":"groupMarker"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/passkey\/vapor\/application\/webauthnkey\/value","title":"Application.WebAuthnKey.Value","type":"typealias"}],"path":"\/documentation\/passkey\/vapor\/application\/webauthnkey","title":"Application.WebAuthnKey","type":"struct"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/passkey\/vapor\/application\/webauthn","title":"var webAuthn: WebAuthnManager","type":"property"}],"path":"\/documentation\/passkey\/vapor\/application","title":"Application","type":"extension"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/passkey\/vapor\/request\/webauthn","title":"var webAuthn: WebAuthnManager","type":"property"}],"path":"\/documentation\/passkey\/vapor\/request","title":"Request","type":"extension"}],"path":"\/documentation\/passkey\/vapor","title":"Vapor","type":"extension"},{"children":[{"title":"Extended Structures","type":"groupMarker"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/passkey\/webauthn\/publickeycredentialcreationoptions\/encoderesponse(for:)","title":"func encodeResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/passkey\/webauthn\/publickeycredentialcreationoptions\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) async throws -> Response","type":"method"}],"path":"\/documentation\/passkey\/webauthn\/publickeycredentialcreationoptions\/asyncresponseencodable-implementations","title":"AsyncResponseEncodable Implementations","type":"symbol"}],"path":"\/documentation\/passkey\/webauthn\/publickeycredentialcreationoptions","title":"PublicKeyCredentialCreationOptions","type":"extension"},{"children":[{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/passkey\/webauthn\/publickeycredentialrequestoptions\/encoderesponse(for:)","title":"func encodeResponse(for: Request) async throws -> Response","type":"method"},{"path":"\/documentation\/passkey\/webauthn\/publickeycredentialrequestoptions\/encoderesponse(status:headers:for:)","title":"func encodeResponse(status: HTTPStatus, headers: HTTPHeaders, for: Request) async throws -> Response","type":"method"}],"path":"\/documentation\/passkey\/webauthn\/publickeycredentialrequestoptions\/asyncresponseencodable-implementations","title":"AsyncResponseEncodable Implementations","type":"symbol"}],"path":"\/documentation\/passkey\/webauthn\/publickeycredentialrequestoptions","title":"PublicKeyCredentialRequestOptions","type":"extension"}],"path":"\/documentation\/passkey\/webauthn","title":"WebAuthn","type":"extension"}],"path":"\/documentation\/passkey","title":"Passkey","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":1}}